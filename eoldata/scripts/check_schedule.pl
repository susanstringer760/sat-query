#!/usr/bin/perl
#
use DBI;

# script to pull the schedule information
# from the database

use Getopt::Std;
use FindBin;
use Sys::Hostname;
use Cwd;
use File::Basename;
use lib "FindBin::Bin";
require "common.sub.pl";
require "config.pl";

# script to output file and sector information so
# it can be verified by comparing the output
# to the output from dump_schedule.pl

if ( $#ARGV < 0 ) {
  print "Usage: $0\n";
  print "\t-s: satellite name (ie: G08)\n";
  print "\t-d: 3 digit julian day (ie: 205)\n";
  exit();
}
our $opt_s;
getopt('sd');
my $satellite = $opt_s;
$satellite = lc($satellite);
my $day = $opt_d;

my $current_dir = cwd();
my $current_date_time = `date '+%Y%m%d_%H%M%S'`;
chop($current_date_time);

my $db_name = dbName();
my $user = dbUser();
my $password = dbPassword();
my $host = hostname;
my $host_name = (split(/\./, $host))[0];

#my $script_fname = basename($0);
my $script_fname = $0;
$current_date_time = `date '+%Y/%m/%d %H:%M:%S'`;
chop($current_date_time);
print "File generated by: $script_fname\n";

my $dbh = connectToDB($db_name, $user, $password, $host);

my $sql = "select f.path, sec.name, sec.abrv from Sector sec, FileTable f where f.sector = sec.id and f.path like '%$satellite%$day%'";

my $db_ref = $dbh->selectall_hashref($sql, 'path');

foreach $column (sort(keys %$db_ref)) {
  my $name = $db_ref->{$column}->{name};
  my $abrv = $db_ref->{$column}->{abrv};
  my $path = $db_ref->{$column}->{path};
  my $fname = basename($path);
  print "$fname = $name $abrv\n";
}
