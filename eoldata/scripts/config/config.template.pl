#!/usr/bin/perl

use Sys::Hostname;
use FindBin qw($Bin);
#
# this file contains all the common variables
# and subroutines

sub dbName() { return "[db name]"}
sub dbUser() { return "'[db user name]'"; } 
sub dbPassword() { return "[db password]"; }

# base hpss directory
sub hpssBase() { return "/EOL/operational/satellite/goes"; }

# hsi executable
sub hsiExe() { return "/opt/local/hpss/bin/hsi -c /scr/sig/krole/krb5cc_hpss_eol_grp_eoldata"; }

# database host
sub dbHost() { return "localhost"; }

# satellite resolution
sub satelliteResolution() { return ["1KM", "4KM"]; }

# host machine (where db lives)
sub host() { return hostname; }

# where the logs go
sub logDir() { return "[log directory]";}

# the base url where html resides
sub baseURL() { return "'[html url]"; }
sub baseHtmlDir() { return "[directory for html files]"; }

# the base cgi url
sub baseCGI() { return "[cgi-bin url]"; }
sub baseCgiDir() { return "[directory for cgi-bin files"; }

# eoldata directory (where scripts/cron reside)
sub eoldataDir() { return "[base directory for eoldata user]"; }

# name of the css filename for the application
sub cssFname() { return baseURL()."/css/query.css"; }

# javascript include file for data_query
sub retrievalJsFname() { return baseURL()."/data_retrieval.js"; }

# maximim size of data request (in gb)
sub maxRequestSize() { return .016; }

# where the request files generated by web application go
sub baseRequestDir() { return "/h/eol/eoldata/sat_query/data_retrieval"; }
sub incomingDir() { return baseRequestDir()."/incoming"; }
sub finishedDir() { return baseRequestDir()."/finished"; }
sub errorDir() { return baseRequestDir()."/error"; }

# data retrieval admin email
sub adminEmail() { return "[admin email]";}

# the html for the bottom of sat_query
sub bottom()  {
  my $base_url = baseURL();
  return "$base_url/bottom.html";
}

# unix command to send mail
sub mailCmd() { return "/usr/lib/sendmail -t"; }

#hpss error codes
sub hpssExitCodes()
{
   my $exit_code_ref = {
    '64' => "Command line usage error. The command was used incorrectly (wrong number of arguments, bad flag, bad syntax in a parameter, or whatever).",  
    '65' => "Data format error. The user's input data was incorrect in some way.",  
    '66' => "Cannot open input. User's input file did not exist or was not readable.",
    '67' => "Addressee unknown. User specified does not exist.",  
    '68' => "Host name unknown. Host specified does not exist.",  
    '69' => "Service unavailable.",
    '70' => "Internal software error inconsistency.",  
    '71' => "Operating system error.",  
    '72' => "Critical OS file missing, cannot be opened, or has some sort of error.",  
    '73' => "Cannot create user output file",  
    '74' => "Input/output error.",  
    '75' => "Temporary failure...please retry.",
    '76' => "Remote error in protocol",
    '77' => "Permission denied"
   };

   return $exit_code_ref;

}

# ftp information
sub ftpDir() { return "[ftp data directory]"; }
my $ftp_domain = "[ftp domain]";
sub ftpCmd() { return "ftp $ftp_domain"; }
sub ftpUrl() { return "ftp://$ftp_domain/pub/hpss/sat_query"; }

sub dataRetrievalScript { return "/h/eol/snorman/git_work/sat_query/cgi-bin/data_retrieval.pl";}

1;
